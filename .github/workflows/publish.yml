# .github/workflows/publish.yml
name: publish

on:
  # Lancement manuel
  workflow_dispatch:
  # Publication automatique quand on pousse un tag v*
  push:
    tags:
      - 'v*'

# Permissions OIDC pour Trusted Publishers
permissions:
  contents: read
  id-token: write

jobs:
  # =========================
  # Publier sur TestPyPI
  # - en workflow_dispatch
  # - sur tags pré-release (vX.Y.Z-rcN, vX.Y.Z-aN, etc.)
  # =========================
  publish-testpypi:
    runs-on: ubuntu-latest
    # Garde l'environment "testpypi" si tu l'utilises (sinon supprime cette ligne)
    environment: testpypi
    if: >
      github.event_name == 'workflow_dispatch' ||
      (startsWith(github.ref, 'refs/tags/v') && contains(github.ref_name, '-'))
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Upgrade build tooling
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade build twine

      - name: Clean dist
        run: rm -rf dist

      - name: Build sdist & wheel
        run: python -m build

      - name: Twine check
        run: python -m twine check dist/*

      - name: Publish to TestPyPI (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  # =========================
  # Publier sur PyPI (prod)
  # - uniquement pour tags finals vX.Y.Z
  # =========================
  publish-pypi:
    runs-on: ubuntu-latest
    # IMPORTANT: mets ici l’environment déclaré côté PyPI (souvent "pypi")
    # ou supprime la ligne si tu n'as pas configuré d'environment dans PyPI.
    environment: pypi
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref_name, '-')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Upgrade build tooling
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade build twine

      - name: Clean dist
        run: rm -rf dist

      - name: Build sdist & wheel
        run: python -m build

      - name: Twine check
        run: python -m twine check dist/*

      - name: Publish to PyPI (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        # Ne PAS définir repository-url ici (par défaut = PyPI prod)
